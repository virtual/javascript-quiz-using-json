{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///quiz.umd.min.js","webpack:///webpack/bootstrap 4a76736d87d64848ec63","webpack:///./src/js/quiz.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","document","extend","defaults","options","assign","isValid","data","JSON","parse","e","getQuizData","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","response","statusText","onerror","send","getScore","answers","length","reduce","acc","val","updateScore","userAnswer","state","push","getTemplate","questions","currentQuestion","question","count","end","questionTemplate","randomiseQuestions","qs","item","temp","Math","floor","random","nextQuestion","config","currentQ","current","template","renderTemplate","id","start","bindSubmit","score","scories","forEach","message","resultMessage","results","title","description","result","minScore","informationTemplate","infoStr","isLast","questionStr","isLastQuestion","option","index","html","existing","getElementById","remove","form","createElement","setAttribute","innerHTML","appendChild","addEventListener","event","preventDefault","target","radios","getElementsByName","parseInt","Array","from","find","r","checked","init","success","error","err","dataSource","defaultOptions","seed","seedData","then","Quiz","TEST","loadingGif","randomise","VERSION","__TEST__","window"],"mappings":"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","file":"quiz.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"js-quiz-using-json\"] = factory();\n\telse\n\t\troot[\"js-quiz-using-json\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"js-quiz-using-json\"] = factory();\n\telse\n\t\troot[\"js-quiz-using-json\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\n      Version: 0.5.1-alpha\n       Author: Matthew D Webb\n  Description: javascript quiz using json\n */\n(function (global, document) {\n\n  'use strict';\n\n  var VERSION = '0.5.1-alpha';\n\n  var Quiz = void 0;\n  var TEST = void 0;\n  var config = void 0;\n\n  // configuration for the plugin, these can be overwritten in the initialisation function:\n  var defaultOptions = {\n    dataSource: null,\n    loadingGif: null,\n    seedData: './data/data.json',\n    id: 'quiz',\n    randomise: false,\n    seed: false\n  };\n\n  // keeps track of the current state\n  var state = {\n    question: {\n      current: 0,\n      count: 0\n    },\n    answers: [],\n    data: {}\n  };\n\n  function extend(defaults, options) {\n    return Object.assign({}, defaults, options);\n  }\n\n  function isValid(data) {\n    try {\n      JSON.parse(data);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  // TODO:\n  // [1] convert to async / await\n  // [2] make function testable (removing annoynmous functions)\n  function getQuizData(url) {\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onload = function onload(data) {\n        if (this.status >= 200 && this.status < 300) {\n          resolve(xhr.response);\n        } else {\n          reject({\n            status: this.status,\n            statusText: xhr.statusText\n          });\n        }\n      };\n      xhr.onerror = function onerror() {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText\n        });\n      };\n      xhr.send();\n    });\n  }\n  // FIXME: error prone.\n  function getScore(answers) {\n    if (answers && answers.length > -1) {\n      return answers.reduce(function (acc, val) {\n        return acc + val;\n      });\n    } else {\n      return 0;\n    }\n  }\n  // TODO: refactor out.\n  function updateScore(userAnswer) {\n    state.answers.push(userAnswer);\n  }\n\n  function getTemplate(questions, currentQuestion) {\n    // End of Quiz?\n    if (state.question.count === currentQuestion) {\n      return end(state);\n      // Next Question\n    } else {\n      var question = questions[currentQuestion];\n      return questionTemplate(question.question, question.options);\n    }\n  }\n\n  function randomiseQuestions(questions) {\n    var qs = questions.length;\n    var item = void 0,\n        temp = void 0;\n    while (qs) {\n      item = Math.floor(Math.random() * qs--);\n      temp = questions[qs];\n      questions[qs] = questions[item];\n      questions[item] = temp;\n    }\n    return questions;\n  }\n\n  function nextQuestion(state, config) {\n    var questions = state.data[0].questions;\n    var currentQ = state.question.current;\n    var template = getTemplate(questions, currentQ);\n    // increment current question:\n    state.question.current += 1;\n    renderTemplate(template, config.id);\n  }\n\n  function start(data, config, state) {\n\n    if (isValid(data) === false) {\n      renderTemplate('<p>The JSON data provided is not valid! Please check this and retry</p>', config.id);\n      return;\n    }\n    // should be moved.\n    state.data = JSON.parse(data);\n    state.question.count = state.data[0].questions.length;\n\n    if (config.random === true) {\n      state.data = randomiseQuestions(state.data);\n    }\n\n    bindSubmit(document);\n    nextQuestion(state, config);\n  }\n\n  function end(state) {\n    var score = getScore(state.answers);\n    var scories = 'Scories!';\n    state.answers.forEach(function (e, i) {\n      scories += '#' + i + ' -- ';\n    });\n    var num = state.answers.length;\n    var message = resultMessage(score, state.data[1].results);\n    return '<h3>Quiz Complete - you answered {num} questions</h3><br>{scories}<br><h4>' + message.title + '</h4><p>' + message.description + '</p>\\n        <p>Your score was: ' + score + ' questions: ' + state.question.count + '</p>';\n  }\n\n  function resultMessage(score, result) {\n    var message = {};\n    result.forEach(function (data) {\n      if (score >= data.minScore) {\n        message = data;\n      }\n    });\n    return message;\n  }\n\n  function informationTemplate(infoStr, isLast) {\n    return '<form id=\"quizForm\"><p>' + infoStr + '</p>\\n          <button id=\"nextQuestion\" type=\"submit\" class=\"btn btn-default\">' + (isLast ? \"Finish Quiz\" : \"Next Question\") + '</button>\\n        </form>';\n  }\n\n  function questionTemplate(questionStr, options) {\n\n    var isLastQuestion = state.question.count === state.question.current + 1;\n    var template = '<div id=\"quizForm\">\\n                  <div>PROGRESS BAR HERE</div>\\n                  <p>' + questionStr + '</p>';\n\n    options ? options.forEach(function (option, index) {\n      template += '<div class=\"radio\">\\n            <label>\\n              <input type=\"radio\" name=\"quizAnswer\" required value=\"' + (index + 1) + '\">\\n              ' + option + '\\n            </label>\\n          </div>';\n    }) : template += '<div>Error! No options provided!</div>';\n\n    template += '<button id=\"nextQuestion\" type=\"submit\" class=\"btn btn-default\">\\n          ' + (isLastQuestion ? \"Finish Quiz\" : \"Next\") + '\\n          </button>\\n        </div>';\n\n    return template;\n  }\n\n  // DOM interaction\n\n  function renderTemplate(html, id) {\n    var existing = document.getElementById(id);\n    if (existing) {\n      existing.remove();\n    }\n    var form = document.createElement('form');\n    form.setAttribute('id', id);\n    form.innerHTML = html;\n    document.getElementById('myQuiz').appendChild(form);\n  }\n\n  function bindSubmit(document) {\n    document.addEventListener('submit', function (event) {\n      event.preventDefault();\n      if (event.target.id === config.id) {\n        var radios = document.getElementsByName('quizAnswer');\n        var answer = parseInt(Array.from(radios).find(function (r, i) {\n          return radios[i].checked;\n        }).value);\n        updateScore(answer);\n        nextQuestion(state, config);\n      }\n    });\n  }\n\n  // INITIALISE THE QUIZ:\n\n  function init(options) {\n\n    // extend all default options, (config is internally accessible):\n    config = extend(defaultOptions, options);\n\n    // will allow the quiz to be run with seed example data:\n    if (config.seed === true) {\n      config.dataSource = config.seedData;\n    }\n\n    // get json\n    getQuizData(config.dataSource).then(success, error);\n\n    function success(data) {\n      start(data, config, state);\n    }\n\n    function error(err) {\n      return renderTemplate('<p>Sorry, we are unable to retrieve the data for this quiz.</p>\\n            <small>Try checking the dateSource provided: ' + config.dataSource + '</small>', config.id);\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ----------------- PRIVATE API (TESTING ONLY) -----------------------//\n  // --------------------------------------------------------------------//\n  TEST = {\n    VERSION: VERSION,\n    state: state,\n    init: init,\n    bindSubmit: bindSubmit,\n    renderTemplate: renderTemplate,\n    questionTemplate: questionTemplate,\n    informationTemplate: informationTemplate,\n    resultMessage: resultMessage,\n    end: end,\n    start: start,\n    nextQuestion: nextQuestion,\n    randomiseQuestions: randomiseQuestions,\n    getTemplate: getTemplate,\n    updateScore: updateScore,\n    getScore: getScore,\n    getQuizData: getQuizData,\n    isValid: isValid,\n    extend: extend\n  };\n\n  // --------------------------------------------------------------------//\n  // ------------------------------- PUBLIC API -------------------------//\n  // --------------------------------------------------------------------//\n  Quiz = global.Quiz = {\n    VERSION: VERSION,\n    init: init\n  };\n\n  Quiz.__TEST__ = TEST;\n\n  return Quiz;\n})(window, document);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// quiz.umd.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4a76736d87d64848ec63","/*\n      Version: 0.5.1-alpha\n       Author: Matthew D Webb\n  Description: javascript quiz using json\n */\n(function (global, document) {\n  \n    'use strict';\n  \n    const VERSION = '0.5.1-alpha';\n  \n    let Quiz;\n    let TEST;\n    let config;\n  \n    // configuration for the plugin, these can be overwritten in the initialisation function:\n    let defaultOptions = {\n      dataSource: null,\n      loadingGif: null,\n      seedData: './data/data.json',\n      id: 'quiz',\n      randomise: false,\n      seed: false\n    };\n  \n    // keeps track of the current state\n    let state = {\n      question: {\n        current: 0,\n        count: 0\n      },\n      answers: [],\n      data: {}\n    };\n  \n    function extend(defaults, options) {\n      return Object.assign({}, defaults, options);\n    }\n  \n    function isValid(data) {\n      try {\n        JSON.parse(data);\n      } catch (e) {\n        return false;\n      }\n      return true;\n    }\n    // TODO:\n    // [1] convert to async / await\n    // [2] make function testable (removing annoynmous functions)\n    function getQuizData(url) {\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n  \n        xhr.open('GET', url);\n        xhr.onload = function onload(data) {\n          if (this.status >= 200 && this.status < 300) {\n            resolve(xhr.response);\n          } else {\n            reject({\n              status: this.status,\n              statusText: xhr.statusText\n            });\n          }\n        };\n        xhr.onerror = function onerror() {\n          reject({\n            status: this.status,\n            statusText: xhr.statusText\n          });\n        };\n        xhr.send();\n      });\n    }\n          // FIXME: error prone.\n    function getScore(answers) {\n      if (answers && answers.length > -1) {\n        return answers.reduce((acc, val) => acc + val);\n      } else {\n        return 0;\n      }\n    }\n    // TODO: refactor out.\n    function updateScore(userAnswer) {\n      state.answers.push(userAnswer);\n    }\n  \n    function getTemplate(questions, currentQuestion) {\n      // End of Quiz?\n      if (state.question.count === currentQuestion) {\n        return end(state);\n      // Next Question\n      } else {\n        let question = questions[currentQuestion];\n        return questionTemplate(question.question, question.options);\n      }\n    }\n  \n    function randomiseQuestions(questions) {\n      let qs = questions.length;\n      let item, temp;\n      while (qs) {\n        item = Math.floor(Math.random() * qs--);\n        temp = questions[qs];\n        questions[qs] = questions[item];\n        questions[item] = temp;\n      }\n      return questions;\n    }\n  \n    function nextQuestion(state, config) {\n      const questions = state.data[0].questions;\n      const currentQ = state.question.current;\n      const template = getTemplate(questions, currentQ);\n      // increment current question:\n      state.question.current += 1;\n      renderTemplate(template, config.id);\n    }\n  \n    function start(data, config, state) {\n  \n        if (isValid(data) === false) {\n          renderTemplate('<p>The JSON data provided is not valid! Please check this and retry</p>', config.id);\n          return;\n        }\n        // should be moved.\n        state.data = JSON.parse(data);\n        state.question.count = state.data[0].questions.length;\n  \n        if (config.random === true) {\n           state.data = randomiseQuestions(state.data);\n        }\n  \n        bindSubmit(document);\n        nextQuestion(state, config);\n    }\n  \n    function end(state) {\n      let score = getScore(state.answers);\n      let scories = 'Scories!';\n      state.answers.forEach((e, i)=>{\n        scories  += '#'+i + ' -- ';\n      })\n      let num = state.answers.length;\n      let message = resultMessage(score, state.data[1].results);\n      return `<h3>Quiz Complete - you answered {num} questions</h3><br>{scories}<br><h4>${message.title}</h4><p>${message.description}</p>\n        <p>Your score was: ${score} questions: ${state.question.count}</p>`;\n    }\n  \n    function resultMessage(score, result) {\n      let message = {};\n      result.forEach((data) => {\n        if (score >= data.minScore) {\n          message = data;\n        }\n      });\n      return message;\n    }\n  \n    function informationTemplate(infoStr, isLast) {\n      return `<form id=\"quizForm\"><p>${infoStr}</p>\n          <button id=\"nextQuestion\" type=\"submit\" class=\"btn btn-default\">${isLast ? \"Finish Quiz\" : \"Next Question\" }</button>\n        </form>`;\n    }\n  \n    function questionTemplate(questionStr, options) {\n  \n      const isLastQuestion = (state.question.count === (state.question.current + 1));\n      var template = `<div id=\"quizForm\">\n                  <div>PROGRESS BAR HERE</div>\n                  <p>${questionStr}</p>`;\n  \n      options ? options.forEach((option, index) => {\n        template += `<div class=\"radio\">\n            <label>\n              <input type=\"radio\" name=\"quizAnswer\" required value=\"${index + 1}\">\n              ${option}\n            </label>\n          </div>`;\n      }) : template += `<div>Error! No options provided!</div>`;\n  \n      template += `<button id=\"nextQuestion\" type=\"submit\" class=\"btn btn-default\">\n          ${ isLastQuestion ? \"Finish Quiz\" : \"Next\" }\n          </button>\n        </div>`;\n  \n      return template;\n    }\n  \n    // DOM interaction\n  \n    function renderTemplate(html, id) {\n      const existing = document.getElementById(id);\n      if(existing) {\n        existing.remove();\n      }\n       const form = document.createElement('form');\n      form.setAttribute('id', id);\n      form.innerHTML = html;\n      document.getElementById('myQuiz').appendChild(form);\n    }\n  \n    function bindSubmit(document) {\n      document.addEventListener('submit', function (event) {\n        event.preventDefault();\n        if(event.target.id === config.id) {\n            const radios = document.getElementsByName('quizAnswer');\n            const answer = parseInt(Array.from(radios).find((r, i) => radios[i].checked).value);\n            updateScore(answer);\n            nextQuestion(state, config);\n        }\n      });\n    }\n  \n    // INITIALISE THE QUIZ:\n  \n    function init(options) {\n  \n      // extend all default options, (config is internally accessible):\n      config = extend(defaultOptions, options);\n  \n      // will allow the quiz to be run with seed example data:\n      if (config.seed === true) {\n        config.dataSource = config.seedData;\n      }\n  \n      // get json\n      getQuizData(config.dataSource).then(success, error);\n  \n      function success(data) {\n        start(data, config, state);\n      }\n  \n      function error(err) {\n        return renderTemplate(\n          `<p>Sorry, we are unable to retrieve the data for this quiz.</p>\n            <small>Try checking the dateSource provided: ${config.dataSource}</small>`\n              , config.id);\n      }\n    }\n  \n    // --------------------------------------------------------------------//\n    // ----------------- PRIVATE API (TESTING ONLY) -----------------------//\n    // --------------------------------------------------------------------//\n    TEST = {\n      VERSION,\n      state,\n      init,\n      bindSubmit,\n      renderTemplate,\n      questionTemplate,\n      informationTemplate,\n      resultMessage,\n      end,\n      start,\n      nextQuestion,\n      randomiseQuestions,\n      getTemplate,\n      updateScore,\n      getScore,\n      getQuizData,\n      isValid,\n      extend\n    };\n  \n    // --------------------------------------------------------------------//\n    // ------------------------------- PUBLIC API -------------------------//\n    // --------------------------------------------------------------------//\n    Quiz = global.Quiz = {\n      VERSION,\n      init\n    };\n  \n    Quiz.__TEST__ = TEST;\n  \n    return Quiz;\n  \n  }(window, document));\n  \n\n\n// WEBPACK FOOTER //\n// ./src/js/quiz.js"],"sourceRoot":""}